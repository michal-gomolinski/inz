{"version":3,"sources":["./src/app/signin/signin.component.html","./src/app/signin/signin.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/pets/pets.component.ts","./src/app/pets/pets.component.html","./src/app/signup/signup.component.html","./src/app/signup/signup.component.ts","./src/app/app-routing.module.ts","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"container\">\n  <div *ngIf=\"!token\" class=\"form\">\n    <h1>Zaloguj:</h1>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Nazwa użytkownika</mat-label>\n      <input\n        matInput\n        name=\"login-username\"\n        [(ngModel)]=\"user.username\"\n      /> </mat-form-field\n    ><br />\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Hasło</mat-label>\n      <input\n        type=\"password\"\n        matInput\n        name=\"login-password\"\n        [(ngModel)]=\"user.password\"\n      /> </mat-form-field\n    ><br />\n    <button (click)=\"login()\" mat-stroked-button color=\"primary\">\n      Zaloguj\n    </button>\n    <p>{{ error }}</p>\n  </div>\n\n  <div *ngIf=\"token\">\n    <div>\n      <h1>Jesteś już zalogowany jako: {{ name }}.</h1>\n      <br />\n      <button mat-button (click)=\"logout()\" class=\"btn btn-primary\">\n        Wyloguj</button\n      >&nbsp; &nbsp;\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss'],\n})\nexport class SigninComponent implements OnInit {\n  constructor(public userService: UserService) {}\n\n  user: any;\n  token: any;\n  name: any;\n  error = '';\n  ngOnInit(): void {\n    this.user = {\n      username: '',\n      password: '',\n    };\n    this.token = this.userService.getToken();\n    this.name = sessionStorage.getItem('username');\n  }\n  login() {\n    this.error = '';\n    this.userService.login({\n      username: this.user.username,\n      password: this.user.password,\n    });\n    this.token = this.userService.getToken();\n    console.log(this.userService.errors);\n    this.error = this.userService.errors;\n    //\n  }\n\n  refreshToken() {\n    this.userService.refreshToken();\n    this.token = this.userService.getToken();\n  }\n\n  logout() {\n    this.userService.logout();\n    this.token = this.userService.getToken();\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"!isLoggedIn\">\n    <h2>Witaj w aplikacji</h2>\n    <p>\n      Aby korzystać z wszystkich funkcjonalności aplikacji musisz posiadać i być\n      zalogowany na konto w aplikacji\n    </p>\n    <button mat-button routerLink=\"sign-in\">Zaloguj się</button>\n    <button mat-button routerLink=\"sign-up\">Stwórz konto</button>\n  </div>\n  <div *ngIf=\"isLoggedIn\">\n    <h2>Welcome {{ username }}!</h2>\n    <p>Who are you?</p>\n    <button mat-button routerLink=\"pets\">Pet Owner</button>\n    <br /><br /><br />\n    <button mat-button (click)=\"logout()\">Log Out</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private userService: UserService) {}\n\n  isLoggedIn = false;\n  username: any;\n  ngOnInit(): void {\n    if (this.userService.getToken()) {\n      this.username = sessionStorage.getItem('username');\n      this.isLoggedIn = true;\n      console.log(this.isLoggedIn);\n    }\n  }\n  logout() {\n    this.userService.logout();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'front-end';\n\n  constructor(public userService: UserService) {}\n\n  public user: any;\n\n  ngOnInit() {}\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserService } from './user.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { HeaderComponent } from './header/header.component';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PetsComponent } from './pets/pets.component';\n\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SigninComponent,\n    SignupComponent,\n    PetsComponent,\n\n    HomeComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSidenavModule,\n    MatListModule,\n    MatRippleModule,\n    FlexLayoutModule,\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<mat-toolbar color=\"primary\" class=\"sticky\">\n  <mat-toolbar-row fxLayoutAlign=\"space-between center\">\n    <div fxLayout=\"row\">\n      <button mat-button routerLink=\"\">&#8962;</button>\n    </div>\n    <div>\n      <button *ngIf=\"deviceXs\" mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(private userService: UserService) {}\n  deviceXs = false;\n  isLoggedIn = false;\n  ngOnInit(): void {\n    if (this.userService.getToken()) this.isLoggedIn = true;\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { throwError } from 'rxjs';\nimport jspdf from 'jspdf';\nimport { jsPDF } from 'jspdf';\n@Component({\n  selector: 'app-pets',\n  templateUrl: './pets.component.html',\n  styleUrls: ['./pets.component.scss'],\n})\nexport class PetsComponent implements OnInit {\n  public rejestry: any;\n  public rejestr: any;\n  constructor(private userService: UserService) {}\n  error = false;\n  getPets() {\n    this.userService.list().subscribe(\n      (data) => {\n        console.log(data[0]);\n        this.rejestry = data;\n        for (let post of this.rejestry) {\n          post.date = new Date(post.date);\n        }\n      },\n\n      (err) => {\n        console.error(err);\n        this.error = true;\n      }\n    );\n  }\n\n  createPet() {\n    this.userService.create(this.rejestr, this.userService.token).subscribe(\n      (data) => {\n        this.getPets();\n        return true;\n      },\n      (error) => {\n        console.error('Error saving!');\n        return throwError(error);\n      }\n    );\n    this.rejestr = {};\n  }\n  ngOnInit(): void {\n    this.getPets();\n    this.rejestr = {};\n  }\n  addGroupToggle() {\n    const overlay = document.getElementById('overlay');\n    const modal = document.getElementById('modal');\n    overlay?.classList.toggle('active');\n    modal?.classList.toggle('active');\n  }\n\n  open() {\n    this.rejestr = {};\n    this.addGroupToggle();\n  }\n  submitForm() {\n    this.createPet();\n    this.addGroupToggle();\n  }\n  modify(rej) {\n    this.rejestr = rej;\n    console.log(this.rejestr);\n    this.addGroupToggle();\n  }\n}\n","<div class=\"container\">\n  <button (click)=\"open()\" mat-raised-button color=\"primary\">\n    Dodaj Rejestr\n  </button>\n  <div class=\"modal\" id=\"modal\">\n    <div class=\"modal-header\">\n      <h1>Informację o rejestrze</h1>\n      <button (click)=\"addGroupToggle()\" mat-button>&times;</button>\n    </div>\n    <div class=\"form\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Skrócona nazwa</mat-label>\n        <input matInput placeholder=\"\" [(ngModel)]=\"rejestr.nazwa_skrocona\" />\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Pełna nazwa</mat-label>\n        <input matInput placeholder=\"\" [(ngModel)]=\"rejestr.nazwa_pelna\" />\n      </mat-form-field>\n      <br />\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Identyfikator dysponenta:</mat-label>\n        <textarea\n          matInput\n          [(ngModel)]=\"rejestr.dysponent_id\"\n        ></textarea></mat-form-field\n      ><br />\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Podstawa prawna:</mat-label>\n        <textarea\n          matInput\n          [(ngModel)]=\"rejestr.podstawa_prawna\"\n        ></textarea></mat-form-field\n      ><br />\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Przeznaczenie rejestru:</mat-label>\n        <textarea\n          matInput\n          [(ngModel)]=\"rejestr.przeznaczenie\"\n        ></textarea></mat-form-field\n      ><br />\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Zakres Informacji:</mat-label>\n        <textarea\n          matInput\n          [(ngModel)]=\"rejestr.zakres_info\"\n        ></textarea></mat-form-field\n      ><br />\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Liczba atrybutów</mat-label>\n        <input\n          matInput\n          type=\"number\"\n          placeholder=\"\"\n          [(ngModel)]=\"rejestr.atrybuty_liczba\"\n        />\n      </mat-form-field>\n      <br />\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Liczba obiektów</mat-label>\n        <input\n          matInput\n          type=\"number\"\n          placeholder=\"\"\n          [(ngModel)]=\"rejestr.obiekty_liczba\"\n        />\n      </mat-form-field>\n      <br />\n    </div>\n    <button (click)=\"submitForm()\" mat-raised-button color=\"primary\">\n      Modyfikuj Rejestr\n    </button>\n  </div>\n  <div *ngFor=\"let rej of rejestry\" id=\"content\" #content>\n    <hr />\n    <div class=\"header\">\n      <h3>Pełna nazwa rejestru:</h3>\n      <button\n        id=\"{{ rej.pk }}\"\n        (click)=\"modify(rej)\"\n        mat-raised-button\n        color=\"primary\"\n      >\n        Edytuj\n      </button>\n    </div>\n    <p>{{ rej.nazwa_pelna }}</p>\n    <h5>Skrócona nazwa rejestru:</h5>\n    <p>{{ rej.nazwa_skrocona }}</p>\n    <h5>Identyfikator dysponenta rejestru:</h5>\n    <p>{{ rej.dysponent_id }}</p>\n    <h5>Podstawa prawna prowadzenia rejestru:</h5>\n    <p>{{ rej.podstawa_prawna }}</p>\n    <h5>Przeznaczenie rejestru:</h5>\n    <p>{{ rej.przeznaczenie }}</p>\n    <h5>Zakres informacji w rejestrze:</h5>\n    <p>{{ rej.zakres_info }}</p>\n    <h5>Liczba atrybutów w rejestrze:</h5>\n    <p>{{ rej.atrybuty_liczba }}</p>\n    <h5>Liczba obiektów w rejestrze:</h5>\n    <p>{{ rej.obiekty_liczba }}</p>\n  </div>\n  <div id=\"overlay\"></div>\n</div>\n","<div class=\"container\">\n  <div *ngIf=\"!token\" class=\"form\">\n    <h1>Stwórz konto:</h1>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Nazwa użytkownika</mat-label>\n      <input\n        matInput\n        name=\"login-username\"\n        [(ngModel)]=\"user.username\"\n      /> </mat-form-field\n    ><br />\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Hasło</mat-label>\n      <input\n        type=\"password\"\n        matInput\n        name=\"login-password\"\n        [(ngModel)]=\"user.password\"\n      /> </mat-form-field\n    ><br />\n    <button (click)=\"login()\" mat-stroked-button color=\"primary\">\n      Rejestracja\n    </button>\n    <button routerLink=\"../sign-in\" color=\"primary\" mat-button>\n      Już posiadasz konto?\n    </button>\n  </div>\n\n  <div *ngIf=\"token\">\n    <div>\n      <h1>You are logged in as {{ name }}.</h1>\n      <br />\n      <button (click)=\"logout()\" class=\"btn btn-primary\">Log Out</button>&nbsp;\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  constructor(public userService: UserService) {}\n\n  user: any;\n  token: any;\n  ngOnInit(): void {\n    this.user = {\n      username: '',\n      password: '',\n    };\n    this.token = this.userService.getToken();\n  }\n  login() {\n    this.userService.register({\n      username: this.user.username,\n      password: this.user.password,\n    });\n  }\n\n  refreshToken() {\n    this.userService.refreshToken();\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\nimport { PetsComponent } from './pets/pets.component';\n\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'sign-in', component: SigninComponent },\n  { path: 'sign-up', component: SignupComponent },\n  { path: 'pets', component: PetsComponent },\n  { path: '', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private httpOptions: any;\n  public token: string;\n  public token_expires: Date;\n  public username: string;\n  public errors: any = [];\n  endpoint = '';\n\n  constructor(private http: HttpClient) {\n    this.httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n  }\n\n  public login(user) {\n    this.http\n      .post(\n        this.endpoint + '/api-token-auth/',\n        JSON.stringify(user),\n        this.httpOptions\n      )\n      .subscribe(\n        (data) => {\n          this.updateData(data['token']);\n          window.location.reload();\n        },\n        (error) => {\n          this.errors = 'Problem with logging in';\n        }\n      );\n  }\n  public register(user) {\n    this.http\n      .post(\n        this.endpoint + '/api/users',\n        JSON.stringify(user),\n        this.httpOptions\n      )\n      .subscribe(\n        (data) => {\n          console.log(data);\n          window.alert('Udało się utworzyć konto');\n          window.location.reload();\n        },\n        (error) => {\n          this.errors = error['error'];\n        }\n      );\n  }\n  public logout() {\n    this.token = null;\n    this.token_expires = null;\n    this.username = null;\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('username');\n    window.location.reload();\n  }\n\n  private updateData(token) {\n    this.token = token;\n    this.errors = [];\n\n    // decode the token to read the username and expiration timestamp\n    const token_parts = this.token.split(/\\./);\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\n    this.token_expires = new Date(token_decoded.exp * 1000);\n    this.username = token_decoded.username;\n    sessionStorage.setItem('username', this.username);\n    sessionStorage.setItem('token', token);\n  }\n  public refreshToken() {\n    this.http\n      .post(\n        this.endpoint + '/api-token-refresh/',\n        JSON.stringify({ token: this.token }),\n        this.httpOptions\n      )\n      .subscribe(\n        (data) => {\n          this.updateData(data['token']);\n        },\n        (err) => {\n          this.errors = err['error'];\n        }\n      );\n  }\n  public getToken() {\n    return sessionStorage.getItem('token');\n  }\n\n  create(post, token) {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'JWT ' + this.getToken(),\n      }),\n    };\n    console.log(JSON.stringify(post));\n    return this.http.post(\n      this.endpoint + '/api/create_rejestr',\n      JSON.stringify(post),\n      httpOptions\n    );\n  }\n\n  list() {\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'JWT ' + this.getToken(),\n      }),\n    };\n    return this.http.get(this.endpoint + '/api/rejestry', httpOptions);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}